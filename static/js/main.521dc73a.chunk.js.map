{"version":3,"sources":["images/Raspberry.png","images/Chocolate.png","images/yellow.png","data.js","components/HeaderButton.js","components/LearnMore.js","components/Header.js","components/IcecreamInfo.js","components/IcecreamImage.js","components/App.js","components/IcecreamCarousel.js","index.js"],"names":["module","exports","flavors","name","info","primaryColor","secondaryColor","HeaderButton","props","state","toggleHover","bind","this","setState","style","backgroundColor","hoverColor","className","onMouseEnter","onMouseLeave","text","React","Component","LearnMore","IceacreamInfo","flavor","toggleLearnMoreModal","IcecreamImage","src","raspberry","chocolate","yellow","alt","viewBox","fill","cx","cy","r","data","require","App","isLearnMoreClicked","returnFlavor","appStyle","border","modalStyle","textColor","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521dc73a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Raspberry.dd884e14.png\";","module.exports = __webpack_public_path__ + \"static/media/Chocolate.6f00992d.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow.60ccf4ef.png\";","const data = {\n  flavors: [\n    {\n      name: `Raspberry Sorbet`,\n      info: `We blended delicious, ripe raspberries into a\n      smooth puree for this tangy yet sweet fruit\n      sorbet. It's refreshing and smooth with a\n      sweet flavor intensity.`,\n      primaryColor: \"rgb(241,168,182)\",\n      secondaryColor: \"rgb(241,135,149)\",\n    },\n    {\n      name: `Mocha Chocolate Cookie`,\n      info: `Our Mocha Chocolate Cookie begins with\n      bold coffee and rich Belgian chocolate, then\n      we take things up a decadent notch by only\n      adding crisp cookie crumble and chocolate\n      cookie pieces.`,\n      primaryColor: \"rgb(182,106,56)\",\n      secondaryColor: \"rgb(148,77,28)\",\n    },\n    {\n      name: `Pineapple Coconut`,\n      info: `Let us take you on a voyage to a tropical\n      island where exotic fruits ripen in the golden\n      sun. We combine pure, sweet cream, tropical\n      pineapple, and delectable coconut flavor for a\n      truly indulgent ice cream experience`,\n      primaryColor: \"rgb(248,206,101)\",\n      secondaryColor: \"rgb(245,181,90)\",\n    },\n  ]\n}\n\nmodule.exports = data;\n","import React from 'react';\n\nclass HeaderButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.toggleHover = this.toggleHover.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      style: { backgroundColor: '' }\n    });\n  }\n  toggleHover() {\n    if (this.state.style.backgroundColor === '') {\n      this.setState({\n        style: {\n          backgroundColor: this.props.hoverColor,\n        },\n      });\n    } else {\n      this.setState({\n        style: {\n          backgroundColor: '',\n        },\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"header-button\"\n        style={this.state.style}\n        onMouseEnter={this.toggleHover}\n        onMouseLeave={this.toggleHover}\n      >\n        {this.props.text}\n      </div>\n    );\n  }\n};\n\nexport default HeaderButton;\n","import React from 'react';\n\nclass LearnMore extends React.Component {\n  render() {\n    return (\n      <div className=\"icecream-learn-more\" style={{ backgroundColor: this.props.hoverColor }}>\n        Learn More\n      </div>\n    );\n  }\n};\n\nexport default LearnMore;\n","import React from 'react';\nimport HeaderButton from './HeaderButton.js';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header-container\">\n        <div className=\"header-container-left\">\n          <HeaderButton text={'home'} hoverColor={this.props.secondaryColor} />\n          <HeaderButton text={'Product'} hoverColor={this.props.secondaryColor} />\n          <HeaderButton text={'Shops'} hoverColor={this.props.secondaryColor} />\n          <HeaderButton text={'About Us'} hoverColor={this.props.secondaryColor} />\n          <HeaderButton text={'Locator'} hoverColor={this.props.secondaryColor} />\n          <HeaderButton text={'Recipes'} hoverColor={this.props.secondaryColor} />\n        </div>\n        <div\n          className=\"header-container-right\"\n          title='Amazon.com'\n        // onClick={() => location.href = 'https://www.amazon.com/Ice-Cream/b?ie=UTF8&node=6459179011'}\n        // href={'https://www.amazon.com/Ice-Cream/b?ie=UTF8&node=6459179011'}\n        >\n          <div\n            style={{ color: this.props.secondaryColor }}\n            className=\"header-shopnow-button\">Shop Now</div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default Header;\n","import React from 'react';\nimport LearnMore from './LearnMore.js';\n\nclass IceacreamInfo extends React.Component {\n  render() {\n    return (\n      <div className=\"icecream-info-container\">\n        <div className=\"icecream-name\">\n          {this.props.flavor.name}\n        </div>\n        <div className=\"icecream-dash\"></div>\n        <div className=\"icecream-info\">\n          {this.props.flavor.info}\n        </div>\n        <LearnMore\n          toggleLearnMoreModal={this.props.toggleLearnMoreModal}\n          hoverColor={this.props.flavor.secondaryColor}\n          primaryColor={this.props.flavor.primaryColor}\n        />\n      </div>\n    )\n  }\n}\n\nexport default IceacreamInfo;\n","import React from 'react';\n\nimport raspberry from '../images/Raspberry.png';\nimport chocolate from '../images/Chocolate.png';\nimport yellow from '../images/yellow.png';\n\nclass IcecreamImage extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"icecream-image-div\">\n          <img className=\"icecream-image-image\" src={this.props.flavor.name === 'Raspberry Sorbet' ? raspberry : this.props.flavor.name === 'Mocha Chocolate Cookie' ? chocolate : yellow} alt=\"iceCreamCone\" />\n        </div>\n        <svg className=\"icecream-image-circle\" viewBox=\"0 0 100 100\">\n          <circle style={{ fill: this.props.flavor.secondaryColor }} cx=\"50\" cy=\"50\" r=\"50\" />\n        </svg>\n      </div>\n    )\n  }\n}\n\nexport default IcecreamImage;\n","import React from 'react';\nimport Header from './Header';\nimport IcecreamCarousel from './IcecreamCarousel';\n\nconst data = require('../data.js');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLearnMoreClicked: false,\n    };\n    this.returnFlavor = this.returnFlavor.bind(this);\n    this.toggleLearnMoreModal = this.toggleLearnMoreModal.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      appStyle: {\n        backgroundColor: `${data.flavors[0].primaryColor}`,\n        border: `5px solid ${data.flavors[0].secondaryColor}`,\n      },\n      modalStyle: {\n        backgroundColor: `white`,\n        border: `5px solid ${data.flavors[0].primaryColor}`,\n      },\n      flavor: data.flavors[0],\n      textColor: '',\n    });\n  }\n  returnFlavor(flavor) {\n    this.setState({\n      appStyle: {\n        backgroundColor: flavor.primaryColor,\n        border: `5px solid ${flavor.secondaryColor}`,\n      },\n      flavor,\n      textColor: flavor.primaryColor,\n    });\n  }\n  toggleLearnMoreModal() {\n    console.log(this.state);\n    this.setState({\n      isLearnMoreClicked: !this.state.isLearnMoreClicked,\n    });\n  }\n  render() {\n    // console.log(this.state);\n    // const { flavor } = this.state;\n    // return (\n    // flavor && <div>failed to load flavor...</div>\n    if (!this.state.flavor) {\n      return (\n        <div>loading</div>\n        // <div className=\"app-container\" style={this.state.appStyle} >\n        //   <Header\n        //     textColor={null}\n        //     primaryColor={this.state.flavor.primaryColor}\n        //     secondaryColor={this.state.flavor.secondaryColor}\n        //   />\n        //   <IcecreamCarousel\n        //     returnFlavor={this.returnFlavor}\n        //     toggleLearnMoreModal={this.toggleLearnMoreModal}\n        //     flavor={data.flavors}\n        //   />\n        // </div>\n      )\n    } else {\n      return (\n        // <div className=\"modal-container\" style={this.state.modalStyle} onClick={() => this.toggleLearnMoreModal()}>\n        //   <Header\n        //     textColor={this.state.textColor}\n        //     primaryColor={this.state.flavor.secondaryColor}\n        //     secondaryColor={this.state.flavor.secondaryColor}\n        //   />\n        //   <Header\n        //     textColor={this.state.textColor}\n        //     primaryColor={this.state.flavor.secondaryColor}\n        //     secondaryColor={this.state.flavor.secondaryColor}\n        //   />\n        // </div>\n        <div className=\"app-container\" style={this.state.appStyle} >\n          <Header\n            textColor={'white'}\n            primaryColor={this.state.flavor.primaryColor}\n            secondaryColor={this.state.flavor.secondaryColor}\n          />\n          <IcecreamCarousel\n            returnFlavor={this.returnFlavor}\n            toggleLearnMoreModal={this.toggleLearnMoreModal}\n            flavor={data.flavors}\n          />\n        </div>\n      )\n    }\n    // );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport IcecreamInfo from './IcecreamInfo.js';\nimport IcecreamImage from './IcecreamImage.js';\n\nclass IcecreamCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flavor: null,\n      flavorIndex: 0,\n      maxFlavorIndex: null,\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    let maxFlavorIndex = -1;\n    if (this.props.flavor) {\n      this.props.flavor.forEach(flavor => {\n        maxFlavorIndex++;\n      });\n    }\n    let flavor = this.props.flavor[0];\n    this.props.returnFlavor(flavor);\n    this.setState({ flavor, maxFlavorIndex });\n  }\n  handleClick(isDirectionRight) {\n    if (isDirectionRight) {\n      if (this.state.flavorIndex + 1 > this.state.maxFlavorIndex) return;\n      this.setState({\n        flavorIndex: this.state.flavorIndex + 1,\n        flavor: this.props.flavor[this.state.flavorIndex + 1]\n      }, () => this.props.returnFlavor(this.state.flavor));\n    } else {\n      if (this.state.flavorIndex - 1 < 0) return;\n      this.setState({\n        flavorIndex: this.state.flavorIndex - 1,\n        flavor: this.props.flavor[this.state.flavorIndex - 1]\n      }, () => this.props.returnFlavor(this.state.flavor));\n    }\n  }\n  render() {\n    if (this.state.flavor) {\n      return (\n        <div>\n          <div className=\"icecream-left-arrow\" onClick={() => this.handleClick(false)}>\n            <svg viewBox=\"0 0 30 30\"><path d=\"M17,3h2c0.386,0,0.738,0.223,0.904,0.572s0.115,0.762-0.13,1.062L11.292,15l8.482,10.367 c0.245,0.299,0.295,0.712,0.13,1.062S19.386,27,19,27h-2c-0.3,0-0.584-0.135-0.774-0.367l-9-11c-0.301-0.369-0.301-0.898,0-1.267 l9-11C16.416,3.135,16.7,3,17,3z\"></path></svg>\n          </div>\n          <div className=\"icecream-right-arrow\" onClick={() => this.handleClick(true)}>\n            <svg viewBox=\"0 0 30 30\"><path d=\"M12,27h-2c-0.386,0-0.738-0.223-0.904-0.572s-0.115-0.762,0.13-1.062L17.708,15L9.226,4.633 c-0.245-0.299-0.295-0.712-0.13-1.062S9.614,3,10,3h2c0.3,0,0.584,0.135,0.774,0.367l9,11c0.301,0.369,0.301,0.898,0,1.267l-9,11 C12.584,26.865,12.3,27,12,27z\"></path></svg>\n          </div>\n          <div className=\"IcecreamCarousel\">\n            <IcecreamInfo\n              flavor={this.state.flavor}\n              toggleLearnMoreModal={this.props.toggleLearnMoreModal}\n            />\n          </div>\n          <div onClick={() => console.log(this.state)}>\n            <IcecreamImage\n              flavor={this.state.flavor}\n            />\n          </div>\n        </div>\n      )\n    } else {\n      return <div>Loading...</div>\n    }\n  }\n}\n\nexport default IcecreamCarousel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}